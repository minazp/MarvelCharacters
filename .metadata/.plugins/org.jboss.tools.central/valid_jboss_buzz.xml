<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Application Safety and Correctness Cannot Be Offloaded to Istio or Any Service Mesh</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/H1EdyqP3sQE/" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_cepostablog" scheme="searchisko:content:tags" /><author><name>christian posta</name></author><id>searchisko:content:id:jbossorg_blog-application_safety_and_correctness_cannot_be_offloaded_to_istio_or_any_service_mesh</id><updated>2018-08-10T13:18:34Z</updated><published>2018-08-10T13:18:34Z</published><content type="html">&lt;p&gt;I’ve recently &lt;a href="https://www.slideshare.net/ceposta/evolution-of-integration-and-microservices-patterns-with-service-mesh-107786281"&gt;started giving a talk&lt;/a&gt; about the evolution of integration and the adoption of service mesh, specifically Istio. I’ve been excited about &lt;a href="http://istio.io"&gt;Istio&lt;/a&gt; ever since I first heard about it back in January 2017; in fact I’ve been &lt;a href="http://blog.christianposta.com/microservices/microservices-2-0/"&gt;excited about this new wave of technology helping to &lt;/a&gt; make microservices and cloud-native architectures a possibility for organizations. Maybe you can tell, as I’ve been writing a lot about it (&lt;a href="twitter.com/christianposta"&gt;follow along for the latest @christianposta&lt;/a&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="http://blog.christianposta.com/microservices/the-hardest-part-of-microservices-calling-your-services/"&gt;The Hardest Part of Microservices: Calling Your Services&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://blog.christianposta.com/microservices/00-microservices-patterns-with-envoy-proxy-series/"&gt;Microservices Patterns With Envoy Sidecar Proxy: The series&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://blog.christianposta.com/microservices/application-network-functions-with-esbs-api-management-and-now-service-mesh/"&gt;http://blog.christianposta.com/microservices/application-network-functions-with-esbs-api-management-and-now-service-mesh/&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://blog.christianposta.com/microservices/comparing-envoy-and-istio-circuit-breaking-with-netflix-hystrix/"&gt;Comparing Envoy and Istio Circuit Breaking With Netflix OSS Hystrix&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://blog.christianposta.com/microservices/traffic-shadowing-with-istio-reduce-the-risk-of-code-release/"&gt;Traffic Shadowing With Istio: Reducing the Risk of Code Release&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://blog.christianposta.com/microservices/advanced-traffic-shadowing-patterns-for-microservices-with-istio-service-mesh/"&gt;Advanced Traffic-shadowing Patterns for Microservices With Istio Service Mesh&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://blog.christianposta.com/how-a-service-mesh-can-help-with-microservices-security/"&gt;How a Service Mesh Can Help With Microservices Security&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Istio builds on some of the goals of containers and Kubernetes: provide valuable distributed-systems patterns as language-agnostic idioms. For example, Kubernetes manages containers across a fleet of machines by doing things like start/stop, health check, scaling/autoscaling, etc regardless of what’s actually running in the containers. Similarly, Istio can solve challenges of reliability, security, policy, and traffic by transparently applying that outside of the application’s container.&lt;/p&gt; &lt;p&gt;With the &lt;a href="https://istio.io/blog/2018/announcing-1.0/"&gt;announcement of Istio 1.0 on July 31st 2018&lt;/a&gt;, we’re seeing a large uptick in Istio usage and adoption. One question I have been seeing is “if Istio provides reliability for me, do I have to worry about it in my application?”&lt;/p&gt; &lt;p&gt;The answer is: abso-freakin-lutely :)&lt;/p&gt; &lt;p&gt;I wrote a post &lt;a href="http://blog.christianposta.com/microservices/application-network-functions-with-esbs-api-management-and-now-service-mesh/"&gt;almost exactly a year ago&lt;/a&gt; that included this distinction, but didn’t make it forcefully enough; this post is my attempt to help rectify that and builds on the &lt;a href="https://www.slideshare.net/ceposta/evolution-of-integration-and-microservices-patterns-with-service-mesh-107786281"&gt;talk earlier referenced&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;So just to set some context: Istio provides application-networking “reliability” capabilities like&lt;/p&gt; &lt;ul&gt; &lt;li&gt;automatic retry&lt;/li&gt; &lt;li&gt;retry quota/budget&lt;/li&gt; &lt;li&gt;connection timeout&lt;/li&gt; &lt;li&gt;request timeout&lt;/li&gt; &lt;li&gt;client-side load balancing&lt;/li&gt; &lt;li&gt;circuit breaking&lt;/li&gt; &lt;li&gt;bulkheading&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;These capabilities are essential when dealing with distributed systems. Networks are not reliable and break a lot of the nice safe assumptions/abstractions we have in a monolith. We’re forced to either solve these problems, or suffer unpredictable system-wide outages.&lt;/p&gt; &lt;h2 id="taking-a-step-back"&gt;Taking a step back&lt;/h2&gt; &lt;p&gt;The larger problem here is actually just getting applications to talk to each other to solve some &lt;em&gt;business functionality&lt;/em&gt;. That’s why we write software, ultimately – to deliver some kind of business value. And that software uses constructs from the business’s domain like “Customer”, “Shopping Cart”, “Account” etc. We &lt;a href="http://blog.christianposta.com/microservices/the-hardest-part-about-microservices-data/"&gt;see from Domain Driven Design that each service may have slightly different understandings&lt;/a&gt; of each of those concepts.&lt;/p&gt; &lt;p&gt;These poorly specified concepts, and the larger business constraints (ie, Customer is uniquely identified by name and email, or Customer can have only one type of Checking account, etc), along with unreliable networking and overall unpredictable infrastructure (build your services with the assumption that things can, and will, fail!) make building things &lt;em&gt;correctly&lt;/em&gt; very difficult.&lt;/p&gt; &lt;h2 id="end-to-end-correctness-and-safety"&gt;End to end correctness and safety&lt;/h2&gt; &lt;p&gt;The fact remains, however, that in terms of building correct and safe applications, the &lt;em&gt;responsibility&lt;/em&gt; of doing so becomes that of the application (and all those who support it). We can try to build lower-levels of reliability into components of the system for performance or optimizations, but the overall responsibility still remains with the applications. This principle was covered in &lt;a href="http://web.mit.edu/Saltzer/www/publications/endtoend/endtoend.pdf"&gt;“End-to-End Arguments in System Design”&lt;/a&gt; by Saltzer, Reed and Clark in 1984. Specifically:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;The function in question can completely and correctly be implemented only with the knowledge and help of the application standing at the endpoints of the communication system.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;Here, “function” is meant to be one of the application requirements like “book a reservation” or “add an item to a shopping cart”. This kind of functionality cannot be generalized to the communication system or its components/infrastructure (the “communication system” here refers to the network, the middleware, and anything providing infrastructure for applications to do their job):&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Therefore, providing that questioned function as a feature of the communication system itself is not possible.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;However, we can do things to the communication system to make parts of it reliable and generally assist in accomplishing a higher-order application requirement. We do these things to optimize an area so the application doesn’t have to worry about it “as much”, but it’s not something the application can ignore:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Sometimes an incomplete version of the function provided by the communication system may be useful as a performance enhancement&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;For example, in the Saltzer paper, they used the example of transferring a file from application A to application B:&lt;/p&gt; &lt;p&gt;&lt;img src="/images/end-to-end/file-transfer.png" alt="" /&gt;&lt;/p&gt; &lt;p&gt;What do we need to do (safety) to ensure the file gets delivered, in tact (correctness)? At any point in the diagram, things can fail: 1) the storage mechanism can have failed sectors/transposed bits/corruptionn, so when application A reads the file, it’s reading a faulty file; 2) the application could have a bug reading the file into memory or sending it out; 3) the network could mix up the byte ordering, duplicate parts of the file, etc. There are optimizations we can make, like using a more reliable transport like TCP or a message queue, but TCP doesn’t know the semantics of “delivering a file correctly” so the best we can hope for is at least when we put things on the network they’ll be delivered reliably.&lt;/p&gt; &lt;p&gt;&lt;img src="/images/end-to-end/tcp-reliability.png" alt="" /&gt;&lt;/p&gt; &lt;p&gt;For full end-to-end correctness, we may need to use something like a file checksum that gets stored with the file on it’s initial write and then have B verify the checksum when it receives the file. However we choose to verify that the transfer took place correctly (implementation detail), the responsibility lies with the application to figure out the solution and to get it right, not TCP or a message queue.&lt;/p&gt; &lt;h2 id="what-are-typical-patterns-that-crop-up"&gt;What are typical patterns that crop up&lt;/h2&gt; &lt;p&gt;In an effort to solve for application correctness and safety in distributed applications, there are patterns that crop up that we can use. Earlier we mentioned some of the reliability patterns that Istio gives us, but those are not the only ones. Generally, there are two classes of patterns that crop up that we can use to assist building applications correctly and safely and both are related. I call those classes “Application Integration” and “Application Networking”. Both are the responsibility of the application. Let’s take a look:&lt;/p&gt; &lt;h3 id="application-integration"&gt;Application Integration&lt;/h3&gt; &lt;p&gt;These patterns crop up in the form of:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Call sequencing, multicasting, and orchestration&lt;/li&gt; &lt;li&gt;Aggregate responses, transforming message semantics, splitting messages, etc&lt;/li&gt; &lt;li&gt;Atomicity, consistency issues, saga pattern&lt;/li&gt; &lt;li&gt;Anti-corruption layers, adapters, boundary transformations&lt;/li&gt; &lt;li&gt;Message retries, de-duplication/idempotency&lt;/li&gt; &lt;li&gt;Message re-ordering&lt;/li&gt; &lt;li&gt;Caching&lt;/li&gt; &lt;li&gt;Message-level routing&lt;/li&gt; &lt;li&gt;Retries, timeouts&lt;/li&gt; &lt;li&gt;Backend/legacy systems integration&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Using a simple example of “add an item to a shopping cart”, we can illustrate these concepts:&lt;/p&gt; &lt;p&gt;&lt;img src="/images/end-to-end/shopping-cart.png" alt="" /&gt;&lt;/p&gt; &lt;p&gt;When a user clicks “add to cart” they expect to see the item added to their shopping cart. In the system, this may involve coordinating calls/call sequencing to a recommendation engine (hey, we added this to the cart, wonder if we can compute recommended offers to go along with it), an inventory service, and others before we actually call the service to insert into the shopping cart. We need to be able to handle transforming the message to the different backends, dealing with failures (and rolling back any changes we initiated), and in each one of the services we need to be able to deal with duplicates. What if for some reason the call ends up being slow and the user clicks “add to cart” again? No amount of reliable infrastructure can save us from a user doing this; we need to detect and implement duplication checking/idempotent services.&lt;/p&gt; &lt;h3 id="application-networking"&gt;Application Networking&lt;/h3&gt; &lt;p&gt;These patterns come in the form of:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;automatic retry&lt;/li&gt; &lt;li&gt;retry quota/budget&lt;/li&gt; &lt;li&gt;connection timeout&lt;/li&gt; &lt;li&gt;request timeout&lt;/li&gt; &lt;li&gt;client-side load balancing&lt;/li&gt; &lt;li&gt;circuit breaking&lt;/li&gt; &lt;li&gt;bulkheading&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;But also other complications of dealing with applications communicating over the network:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Canary rollout&lt;/li&gt; &lt;li&gt;Traffic routing&lt;/li&gt; &lt;li&gt;Metrics collection&lt;/li&gt; &lt;li&gt;Distributed tracing&lt;/li&gt; &lt;li&gt;Traffic shadowing&lt;/li&gt; &lt;li&gt;Fault injection&lt;/li&gt; &lt;li&gt;Health checking&lt;/li&gt; &lt;li&gt;Security&lt;/li&gt; &lt;li&gt;Organizational policy&lt;/li&gt; &lt;/ul&gt; &lt;h2 id="how-do-we-use-these-patterns"&gt;How do we use these patterns?&lt;/h2&gt; &lt;p&gt;In the past, we tried to commingle these areas of application responsibility. We would do things like shove everything into centralized infrastructure that was counted on to be basically 100% available (application networking + application integration). We put application concerns into this centralized infrastructure (which was supposed to make us more agile) but then suffered bottlenecks and rigidness when it came to making changes to applications quickly. These dynamics manifested in the way we implemented Enterprise Service Bus:&lt;/p&gt; &lt;p&gt;&lt;img src="/images/end-to-end/esb-commingle.png" alt="" /&gt;&lt;/p&gt; &lt;p&gt;Alternatively, I believe the big clouds (Netflix, Amazon, Twitter, etc) recognized this “application responsibility” aspect to these patterns and just commingled the application networking code into the application. Think things like Netflix OSS where we had different libraries for circuit breaking, client-side load balancing, service discovery, etc.&lt;/p&gt; &lt;p&gt;&lt;img src="/images/end-to-end/netflix-commingle.png" alt="" /&gt;&lt;/p&gt; &lt;p&gt;As you know, Netflix OSS libraries around application networking were very Java focused. As organizations started to adopt Netflix OSS and derivatives like spring-cloud-netflix, they met head on with the fact that operationalizing an architecture like that became prohibitive as soon as you started adding other languages. Netflix had the maturity and automation in place to pull it off, other organizations are not Netflix. Some of the problems when trying to operationalize application libraries and frameworks that solve the application-networking spectrum of problems:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Each language/framework has its own implementation of these concerns&lt;/li&gt; &lt;li&gt;The implementations won’t be 100% exactly the same; they’ll vary, differ, and sometimes be wrong&lt;/li&gt; &lt;li&gt;How do you manage, update, patch these libraries? ie, lifecycle management&lt;/li&gt; &lt;li&gt;These libraries muddy up the logic of the application&lt;/li&gt; &lt;li&gt;Lots of trust in developers implementing the basics correctly&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Istio and service mesh in general aim to solve the application-networking class of problems. Moving the solution to these problems to the service mesh is an &lt;em&gt;optimization&lt;/em&gt; for operability. This does not mean it’s not the application’s responsibility anymore, it just means the implementation of these capabilities exist out of process and must be configured.&lt;/p&gt; &lt;p&gt;&lt;img src="/images/end-to-end/layers.png" alt="" /&gt;&lt;/p&gt; &lt;p&gt;By doing so, we can optimize operability by doing the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;One single implementation of these capabilities everywhere&lt;/li&gt; &lt;li&gt;Consistent functionality&lt;/li&gt; &lt;li&gt;Correct functionality&lt;/li&gt; &lt;li&gt;Programmable by both application operators and application developers&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Istio and service mesh don’t allow you to offload responsibility to the infrastructure, they just add some level of reliability and optimize for reliability. Just like in the end-to-end argument, TCP doesn’t allow you to offload application responsibilities.&lt;/p&gt; &lt;p&gt;Istio helps with application networking reliability and for developers there’s a myriad of frameworks to help with the application-integration aspects. My favorite for Java developers is &lt;a href="https://github.com/apache/camel"&gt;Apache Camel&lt;/a&gt; which provides a lot of the pieces needed to write correct and safe applications including:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=""&gt;Call sequencing, multicasting, and orchestration&lt;/a&gt;&lt;/li&gt; &lt;li&gt;[]Aggregate responses, transforming message semantics, splitting messages, etc](https://github.com/apache/camel/blob/master/camel-core/src/main/docs/eips/aggregate-eip.adoc)&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/apache/camel/blob/master/camel-core/src/main/docs/eips/saga-eip.adoc"&gt;Atomicity, consistency issues, saga pattern&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/apache/camel/blob/master/components/readme.adoc"&gt;Anti-corruption layers, adapters, boundary transformations&lt;/a&gt;&lt;/li&gt; &lt;li&gt;[]Message retries, de-duplication/idempotency](https://github.com/apache/camel/blob/master/camel-core/src/main/docs/eips/idempotentConsumer-eip.adoc)&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/apache/camel/blob/master/camel-core/src/main/docs/eips/resequence-eip.adoc"&gt;Message reordering&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Caching&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/apache/camel/blob/master/camel-core/src/main/docs/eips/content-based-router-eip.adoc"&gt;Message-level routing&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Retries, timeouts&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/apache/camel/blob/master/components/readme.adoc"&gt;Backend/legacy systems integration&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;img src="/images/end-to-end/layers-camel.png" alt="" /&gt;&lt;/p&gt; &lt;h2 id="what-about-smart-endpoints-dumb-pipes"&gt;What about smart endpoints dumb pipes&lt;/h2&gt; &lt;p&gt;So with respect to microservices, a friend of mine posed a question regarding the catchy but simplistic “smart endpoints and dump pipes” phrase regarding microservices and how does “making the infrastructure smarter” affect that premise:&lt;/p&gt; &lt;p&gt;&lt;img src="/images/end-to-end/twitter.png" alt="" /&gt;&lt;/p&gt; &lt;p&gt;The answer I gave was:&lt;/p&gt; &lt;p&gt;&lt;img src="/images/end-to-end/twitter2.png" alt="" /&gt;&lt;/p&gt; &lt;p&gt;The pipes are still dumb; we’re not coercing application logic about application correctness and safety into the infrastructure by using a service mesh. We’re simply making it more reliable, optimizing for operational aspects, and simplifying what the application has to &lt;em&gt;implement&lt;/em&gt; not be responsible for. Feel free to leave comments or reach out on twitter &lt;a href="http://twitter.com/christianposta"&gt;@christianposta&lt;/a&gt; if you disagree or have additional thoughts.&lt;/p&gt; &lt;p&gt;&lt;a href="http://blog.christianposta.com/microservices/application-safety-and-correctness-cannot-be-offloaded-to-istio-or-any-service-mesh/"&gt;Application Safety and Correctness Cannot Be Offloaded to Istio or Any Service Mesh&lt;/a&gt; was originally published by Christian Posta at &lt;a href="http://blog.christianposta.com"&gt;Software Blog&lt;/a&gt; on August 10, 2018.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/H1EdyqP3sQE" height="1" width="1" alt=""/&gt;</content><summary>I’ve recently started giving a talk about the evolution of integration and the adoption of service mesh, specifically Istio. I’ve been excited about Istio ever since I first heard about it back in January 2017; in fact I’ve been excited about this new wave of technology helping to make microservices and cloud-native architectures a possibility for organizations. Maybe you can tell, as I’ve been wr...</summary><dc:creator>christian posta</dc:creator><dc:date>2018-08-10T13:18:34Z</dc:date><feedburner:origLink>http://blog.christianposta.com/microservices/application-safety-and-correctness-cannot-be-offloaded-to-istio-or-any-service-mesh/</feedburner:origLink></entry><entry><title>Firewalld: The Future is nftables</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ppD0T8nwncQ/" /><category term="Community" /><category term="Security" /><category term="community" /><category term="Fedora" /><category term="Firewall" /><category term="firewalld" /><category term="nftables" /><author><name>Eric Garver</name></author><id>https://developers.redhat.com/blog/?p=512017</id><updated>2018-08-10T11:00:07Z</updated><published>2018-08-10T11:00:07Z</published><content type="html">&lt;p&gt;Firewalld, the default firewall management tool in Red Hat Enterprise Linux and Fedora, has gained long sought support for nftables. This was announced in detail on firewalld&amp;#8217;s project &lt;a href="https://firewalld.org/2018/07/nftables-backend" target="_blank" rel="noopener"&gt;blog&lt;/a&gt;. The feature landed in the firewalld 0.6.0 release as the new default firewall backend.&lt;/p&gt; &lt;p&gt;The benefits of nftables have been outlined on the Red Hat Developer Blog:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2016/10/28/what-comes-after-iptables-its-successor-of-course-nftables/"&gt;What comes after iptables? Its successor, of course: nftables&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2017/04/11/benchmarking-nftables/"&gt;Benchmarking nftables&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2017/01/10/migrating-my-iptables-setup-to-nftables/"&gt;Migrating my iptables setup to nftables&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;There are many longstanding issues with firewalld that we can address with nftables that were not possible with the old iptables backend. The nftables backend allows the following improvements:&lt;/p&gt; &lt;p&gt;&lt;span id="more-512017"&gt;&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;all firewall information viewable with a single underlying tool, nft&lt;/li&gt; &lt;li&gt;single rule for both IPv4 and IPv6 instead of duplicating rules&lt;/li&gt; &lt;li&gt;does not assume complete control of firewall backend&lt;/li&gt; &lt;li&gt;won&amp;#8217;t delete firewall rules installed by other tools or users&lt;/li&gt; &lt;li&gt;rule optimizations (log and deny in same rule)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Most important of all, the new backend is nearly 100% compatible with preexisting configurations. Most users won&amp;#8217;t even notice something changed. This means even slower moving distributions should be able to pick up the new version.&lt;/p&gt; &lt;p&gt;You can get started with firewalld and nftables today! firewalld 0.6.0 is already available in Fedora rawhide and will be in the upcoming Fedora 29 release. Existing Fedora installs will automatically be upgraded to the nftables backend when they upgrade to Fedora 29.&lt;/p&gt; &lt;p&gt;Unfortunately firewalld&amp;#8217;s nftables backend is unlikely to find it&amp;#8217;s way to Red Hat Enterprise Linux 7. The good news is since Fedora is RHEL&amp;#8217;s upstream it is likely that the nftables backend will eventually make it into some future RHEL release.&lt;/p&gt; &lt;p&gt;For further details please refer to the upstream &lt;a href="https://firewalld.org/2018/07/nftables-backend" target="_blank" rel="noopener"&gt;blog post&lt;/a&gt; on &lt;a href="https://firewalld.org/"&gt;firewalld.org&lt;/a&gt;. Happy firewalling!&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F10%2Ffirewalld-the-future-is-nftables%2F&amp;#38;linkname=Firewalld%3A%20The%20Future%20is%20nftables" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F10%2Ffirewalld-the-future-is-nftables%2F&amp;#38;linkname=Firewalld%3A%20The%20Future%20is%20nftables" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F10%2Ffirewalld-the-future-is-nftables%2F&amp;#38;linkname=Firewalld%3A%20The%20Future%20is%20nftables" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F10%2Ffirewalld-the-future-is-nftables%2F&amp;#38;linkname=Firewalld%3A%20The%20Future%20is%20nftables" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F10%2Ffirewalld-the-future-is-nftables%2F&amp;#38;linkname=Firewalld%3A%20The%20Future%20is%20nftables" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F10%2Ffirewalld-the-future-is-nftables%2F&amp;#38;linkname=Firewalld%3A%20The%20Future%20is%20nftables" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F10%2Ffirewalld-the-future-is-nftables%2F&amp;#38;linkname=Firewalld%3A%20The%20Future%20is%20nftables" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F10%2Ffirewalld-the-future-is-nftables%2F&amp;#38;linkname=Firewalld%3A%20The%20Future%20is%20nftables" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F10%2Ffirewalld-the-future-is-nftables%2F&amp;#38;title=Firewalld%3A%20The%20Future%20is%20nftables" data-a2a-url="https://developers.redhat.com/blog/2018/08/10/firewalld-the-future-is-nftables/" data-a2a-title="Firewalld: The Future is nftables"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/08/10/firewalld-the-future-is-nftables/"&gt;Firewalld: The Future is nftables&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ppD0T8nwncQ" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Firewalld, the default firewall management tool in Red Hat Enterprise Linux and Fedora, has gained long sought support for nftables. This was announced in detail on firewalld&amp;#8217;s project blog. The feature landed in the firewalld 0.6.0 release as the new default firewall backend. The benefits of nftables have been outlined on the Red Hat Developer [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/08/10/firewalld-the-future-is-nftables/"&gt;Firewalld: The Future is nftables&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/08/10/firewalld-the-future-is-nftables/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">512017</post-id><dc:creator>Eric Garver</dc:creator><dc:date>2018-08-10T11:00:07Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/08/10/firewalld-the-future-is-nftables/</feedburner:origLink></entry><entry><title>RESTEasy release week</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/hQM_rxOrbRw/resteasy-release-week" /><category term="feed_group_name_resteasy" scheme="searchisko:content:tags" /><category term="feed_name_resteasy" scheme="searchisko:content:tags" /><category term="JAX-RS" scheme="searchisko:content:tags" /><category term="resteasy" scheme="searchisko:content:tags" /><category term="springboot" scheme="searchisko:content:tags" /><author><name>Alessio Soldano</name></author><id>searchisko:content:id:jbossorg_blog-resteasy_release_week</id><updated>2018-08-09T22:48:46Z</updated><published>2018-08-09T22:48:00Z</published><content type="html">&lt;!-- [DocumentBodyStart:6e6604c1-0bdd-4a42-8fff-792ea8305dfa] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;p&gt;It's been a busy week... but before leaving for the week-end I owe you an update ;-) Three new releases have been completed in the last days:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12310560&amp;amp;version=12337962" rel="nofollow"&gt;RESTEasy 3.6.1.Final&lt;/a&gt;, first maintenance release of the 3.6 series, will be shipped in next WildFly 14;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="https://issues.jboss.org/secure/ReleaseNote.jspa?version=12337963&amp;amp;projectId=12310560" rel="nofollow"&gt;RESTEasy 4.0.0.Beta5&lt;/a&gt;, latest step towards RESTEasy 4, cleans up a bunch of deprecated / old classes;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="https://issues.jboss.org/secure/ReleaseNote.jspa?version=12338799&amp;amp;projectId=12310560" rel="nofollow"&gt;resteasy-spring-boot-starter 2.0.1.Final&lt;/a&gt;, upgrades to latest RESTEasy core and Spring Boot (2.0.4.RELEASE).&lt;/li&gt;&lt;/ul&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;As usual, give them a try while they're hot, feedback is welcome!&lt;/p&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:6e6604c1-0bdd-4a42-8fff-792ea8305dfa] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/hQM_rxOrbRw" height="1" width="1" alt=""/&gt;</content><summary>It's been a busy week... but before leaving for the week-end I owe you an update ;-) Three new releases have been completed in the last days: RESTEasy 3.6.1.Final, first maintenance release of the 3.6 series, will be shipped in next WildFly 14; RESTEasy 4.0.0.Beta5, latest step towards RESTEasy 4, cleans up a bunch of deprecated / old classes; resteasy-spring-boot-starter 2.0.1.Final, upgrades to ...</summary><dc:creator>Alessio Soldano</dc:creator><dc:date>2018-08-09T22:48:00Z</dc:date><feedburner:origLink>https://developer.jboss.org/community/resteasy/blog/2018/08/09/resteasy-release-week</feedburner:origLink></entry><entry><title>This week in JBoss, 9th of August 2018 - Pushing Through The Heat Wave</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/DodX5xi3cdo/this-week-in-jboss-9th-of-august-2018-pushing-through-the-heat-wave" /><category term="agile" scheme="searchisko:content:tags" /><category term="camel route" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="datagrid" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_weeklyeditorial" scheme="searchisko:content:tags" /><category term="github" scheme="searchisko:content:tags" /><category term="GraalVM" scheme="searchisko:content:tags" /><category term="hibernate-orm" scheme="searchisko:content:tags" /><category term="jbpm development" scheme="searchisko:content:tags" /><category term="js" scheme="searchisko:content:tags" /><category term="keycloak" scheme="searchisko:content:tags" /><category term="OpenShift.io" scheme="searchisko:content:tags" /><category term="opensource" scheme="searchisko:content:tags" /><category term="polyglot" scheme="searchisko:content:tags" /><category term="resteasy" scheme="searchisko:content:tags" /><category term="serverless" scheme="searchisko:content:tags" /><category term="slack" scheme="searchisko:content:tags" /><category term="springboot" scheme="searchisko:content:tags" /><author><name>Romain Pelisse</name></author><id>searchisko:content:id:jbossorg_blog-this_week_in_jboss_9th_of_august_2018_pushing_through_the_heat_wave</id><updated>2018-08-09T17:08:40Z</updated><published>2018-08-09T17:08:40Z</published><content type="html">&lt;!-- [DocumentBodyStart:0e9c4028-3a19-478d-b57a-757ef9d6f1d6] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;p&gt;&lt;em&gt;If you are, like me, in Europe now, you must know that it is (ridiculously) hot right now... But despite this heat wave of a sort, the JBoss community, as always, have been pretty busy in the last two weeks - certainly leveraging the relative quiteness of the summer season, to get some "things done". Let's take a look at you may have missed in the recent days...&lt;/em&gt;&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;&lt;a href="https://www.flickr.com/photos/rykneethling/4507765828/in/photolist-7SktJu-dfDvAK-26m2n7U-cpjodS-bK16kT-9D4oRG-6x8uGt-9nnkGN-aR5E5T-2WMwR-9zWc46-boo5e7-bWGmsF-aoTzep-9LU67Q-SdA9fC-G77pVS-boovvm-cuKVzW-oJkop6-fxKVdz-572JK4-7tV11j-cxEs8W-9D4oed-5Qrok-2tsxe-4NjRGX-rtVmFL-emovNn-6QbvJ1-9pLNq1-29iDWw2-9fmXog-dZG6Qy-c31QVJ-hyu3xf-f7NFw-dTVWBC-6wgwX6-4x477r-4x3WWZ-7Bx6Ez-M36sb1-7v4Vpj-hjz8UF-f5Q1Ya-fx3Buz-cKrggo-bBit8B" rel="nofollow"&gt;&lt;img alt="Fan" height="160" src="https://farm3.staticflickr.com/2053/4507765828_b1ff117f12_m.jpg" style="display: block; margin-left: auto; margin-right: auto;" width="240"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;h2&gt;Techbytes&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Let's start with some high level consideration by checking out this new article called&amp;#160; &lt;a class="jive-link-external-small" href="http://www.ofbizian.com/2018/08/from-agile-to-serverless-and-beyond.html" rel="nofollow"&gt;From Agile to Serverless&lt;/a&gt;. Indeed, as the buzz around "serverless" is growing up, I though it might be a good idea to remember a bit how we ended up here &lt;span aria-label="Wink" class="emoticon-inline emoticon_wink" style="height:16px;width:16px;"&gt;&lt;/span&gt;!&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;&lt;a href="https://www.flickr.com/photos/cannon_s5_is/8118850048/in/photolist-dnregf-K6Ayfr-rmtvyS-pj975Z-G3dRjc-eGwwPc-dDNTdZ-28t4jJ6-298Gxdo-Z8kL71-pMb1M1-22goTg1-qP7MUw-kWPrrA-9CrZ2J-qKbBE2-8WCUxw-aYmDKg-phX2p7-rxZVV8-UPtD8a-5kJ8aT-KMgEg2-eJGDaC-nQ5Nrw-2471AeE-26Gg3Ud-24gobDU-iJEGxH-7aRjYG-25ciG8F-g4zUBH-KaXgJ6-21VLM7f-6aydnV-ad8Gim-23ZADbh-WAyWbD-qxuPow-fMkwZA-EyLadE-9D9FrL-25b9PGL-nDJrf6-276dFHU-23pV1aA-27fonCp-26nz3wt-SGcDWR-23BdpU4" rel="nofollow"&gt;&lt;img alt="Zig Zag" height="160" src="https://farm9.staticflickr.com/8055/8118850048_2e28443857_m.jpg" style="display: block; margin-left: auto; margin-right: auto;" width="240"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Deploying application inside Openshift is certainly a big trend of the last year. Indeed, one of the core functionality of Openshift - autoscaling, can be the key to success, but is also not so easy to implement. So you certainly want to take look at this quite good article on &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/08/08/autoscaling-red-hat-cache-service/" rel="nofollow"&gt;Autoscaling the Red Hat Cache Service on OpenShift&lt;/a&gt;. (and if you wonder, Red Hat Cache Service is based on Infinispan &lt;span aria-label="Wink" class="emoticon-inline emoticon_wink" style="height:16px;width:16px;"&gt;&lt;/span&gt; ).&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;If there is something that many of us like, as being both developer and member of JBoss Community, is to find way for products to integrate in way that match our way of working - rather than being forced to use a tool in a certain way. So, for instance, if you do not like XML, but love to work with Camel, you need to check up this little article on &lt;a class="jive-link-external-small" href="https://lburgazzoli.github.io/2018/07/29/Polyglot-Camel-Routes.html" rel="nofollow"&gt;Polyglot Camel Routes&lt;/a&gt;. Along the same lines, if you have to work with JS but would like to be able to use Java instead, take a look at the following article: &lt;a class="jive-link-external-small" href="https://lburgazzoli.github.io/2018/08/06/Adventures-in-GraalVM-invoke-Java-code-from-JS-in-native-image.html" rel="nofollow"&gt;Adventures in GraalVM: invoke Java code from JS in native-image&lt;/a&gt;&lt;/p&gt;&lt;p&gt;. Last, but not the least, let's take a quick look at how &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/08/06/setting-up-rbac-on-red-hat-amq-broker/" rel="nofollow"&gt;How to set up RBAC on Red Hat AMQ Broker&lt;/a&gt;!&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Community&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;The JBoss community encompasses several other ones and one of the most thriving is certainly the Hibernate community. And the best way to keep up with this one is to check out their &lt;a class="jive-link-external-small" href="http://in.relation.to/2018/08/09/hibernate-community-newsletter-2018-15/" rel="nofollow"&gt;Hibernate Community Newsletter 15/2018&lt;/a&gt;. One of the main feature of this month entry is the interview of one of the developer: &lt;a class="jive-link-external-small" href="http://in.relation.to/2018/08/07/meet-jan-willem-gmelig-meyling/" rel="nofollow"&gt;Meet Jan-Willem Gmelig Meyling&lt;/a&gt;.&lt;/p&gt;&lt;p class="active_link" style="min-height: 8pt; padding: 0px;" title="http://in.relation.to/2018/08/09/hibernate-community-newsletter-2018-15/"&gt;&amp;#160;&lt;/p&gt;&lt;p class="active_link" title="http://in.relation.to/2018/08/09/hibernate-community-newsletter-2018-15/"&gt;An other interesting item, regarding the community at large, is this article on &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/07/27/collaboration-in-open-source-license-enforcement-a-community-movement-is-happening/" rel="nofollow"&gt;Collaboration in open source license enforcement - a community movement is happening&lt;/a&gt;. Please do check it out, it's pretty interesting to see what is happening lately on this front!&lt;/p&gt;&lt;p class="active_link" style="min-height: 8pt; padding: 0px;" title="http://in.relation.to/2018/08/09/hibernate-community-newsletter-2018-15/"&gt;&amp;#160;&lt;/p&gt;&lt;h2 class="active_link" title="http://in.relation.to/2018/08/09/hibernate-community-newsletter-2018-15/"&gt;Evangelist's Corner&lt;/h2&gt;&lt;h2&gt;&lt;/h2&gt;&lt;p&gt;As always, our own Eric D. Schabell has been quite productive in the last two weeks and released not one, but two articles on Opensource.com: &lt;a class="jive-link-external-small" href="https://opensource.com/article/18/8/data-risky-cloud" rel="nofollow"&gt;What data is too risky for the cloud?&lt;/a&gt; and &lt;a class="jive-link-external-small" href="https://opensource.com/article/18/7/why-you-cant-move-everything-cloud" rel="nofollow"&gt;Why you can't move everything to the cloud&lt;/a&gt;. On top of those articles, he also released the fourth part of his ongoing series for DZone on &lt;a class="jive-link-external-small" href="https://dzone.com/articles/3-pitfalls-everyone-should-avoid-with-hybrid-multi-5" rel="nofollow"&gt;3 Pitfalls Everyone Should Avoid With Hybrid Multi-Cloud (Part 4)&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Releases, releases, releases...&lt;/h2&gt;&lt;p&gt;As alwasy, the last past two weeks have seen their fair share of releases - so here is a small recap:&lt;/p&gt;&lt;ul&gt;&lt;li class="active_link" title="https://blog.infinispan.org/2018/08/infinispan-users-we-have-just-released-9.html"&gt;&lt;a class="jive-link-external-small" href="https://blog.infinispan.org/2018/08/infinispan-users-we-have-just-released-9.html Infinispan 9.4.0.Beta1 is out!" rel="nofollow"&gt;Infinispan 9.4.0.Beta1 is out!&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://www.ofbizian.com/2018/08/from-agile-to-serverless-and-beyond.html" rel="nofollow"&gt;Keycloak: Keycloak 4.2.0.Final released&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://blog.keycloak.org/2018/08/keycloak-421final-released.html" rel="nofollow"&gt;Keycloak: Keycloak 4.2.1.Final released&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2018/08/02/hibernate-orm-534-final-out/" rel="nofollow"&gt;Hibernate ORM 5.3.4.Final released - In Relation To&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-blog-small" data-containerId="1100" data-containerType="37" data-objectId="6217" data-objectType="38" href="https://developer.jboss.org/community/resteasy/blog/2018/07/31/resteasy-spring-boot-starter-200final"&gt;RESTEasy Spring Boot starter 2.0.0.Final&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Decaf'&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;The JBoss community and products are not living in their own little planet and there is all action happening around them that you may like to be aware of. Openshift being a rising interest in the Java world, it's certainly make sense to know about the &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/08/03/okd-renaming-of-openshift-origin-with-3-10-release/" rel="nofollow"&gt;Renaming of OpenShift Origin with 3.10 release&lt;/a&gt;. Also of interest for the Java developer would be those the two next articles. The first one cover the not so easy topic of &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/08/02/container-native-integration-testing/" rel="nofollow"&gt;Container-native integration testing&lt;/a&gt;&lt;/p&gt;&lt;p&gt;and the second adresses the problematic of &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/07/30/natively-compile-java-code-for-better-startup-time/" rel="nofollow"&gt;Natively compile Java code for better startup time&lt;/a&gt;. Both are certainly worth checking out!&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;&lt;span style="font-weight: inherit; font-family: inherit;"&gt;&lt;em&gt;Hopefully, you have found something in this week's editorial to pique your interest and give you something to explore while waiting for next week's installment. Join us here next week for more news from the JBoss Community.&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:0e9c4028-3a19-478d-b57a-757ef9d6f1d6] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/DodX5xi3cdo" height="1" width="1" alt=""/&gt;</content><summary>If you are, like me, in Europe now, you must know that it is (ridiculously) hot right now... But despite this heat wave of a sort, the JBoss community, as always, have been pretty busy in the last two weeks - certainly leveraging the relative quiteness of the summer season, to get some "things done". Let's take a look at you may have missed in the recent days...   Techbytes   Let's start with some...</summary><dc:creator>Romain Pelisse</dc:creator><dc:date>2018-08-09T17:08:40Z</dc:date><feedburner:origLink>https://developer.jboss.org/blogs/weekly-editorial/2018/08/09/this-week-in-jboss-9th-of-august-2018-pushing-through-the-heat-wave</feedburner:origLink></entry><entry><title>Shift Developer Conference 2018 - How to Jump Start a Career in Open Source (video)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/H2zCLGE-I1M/shift-dev-2018-howto-jump-start-career-in-opensource-video.html" /><category term="conference" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-shift_developer_conference_2018_how_to_jump_start_a_career_in_open_source_video</id><updated>2018-08-09T12:38:43Z</updated><published>2018-08-09T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;a href="https://4.bp.blogspot.com/-CNelZrWyTIc/WxArd9Dlp3I/AAAAAAAAsro/-bwJNOsm-NAIiTVbfde9RKM7CEblZUQfgCLcBGAs/s1600/shiftdev2018.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img alt="shift developer" border="0" data-original-height="530" data-original-width="967" height="175" src="https://4.bp.blogspot.com/-CNelZrWyTIc/WxArd9Dlp3I/AAAAAAAAsro/-bwJNOsm-NAIiTVbfde9RKM7CEblZUQfgCLcBGAs/s320/shiftdev2018.png" title="" width="320" /&gt;&lt;/a&gt;&lt;br /&gt;As &lt;a href="http://www.schabell.org/2018/05/shift-dev-2018-howto-jump-start-career-in-opensource.html" target="_blank"&gt;previously posted&lt;/a&gt;, I spent this week at the largest developer conference in Southeast Europe, known as the Shift Developer Conference 2018.&lt;br /&gt;&lt;br /&gt;I gave a talk on the soft skill side of development, suggesting some ways to jump start a career in open source. I did not mention coding, pull requests or even suggest to join a coding project. It's more subtle than the obvious components one would expect in such a topic.&lt;br /&gt;&lt;br /&gt;My career in open source has been a long one and I think I've got a few good tips, tricks and pieces of advice based on what's worked on this long and wonderful journey.&lt;br /&gt;&lt;br /&gt;After the event &lt;a href="http://www.schabell.org/2018/06/shift-dev-2018-howto-jump-start-career-in-opensource-slides.html" target="_blank"&gt;slides were posted&lt;/a&gt;. The only item missing was the on-site video recording of my session. The organizers posted that today, so here you go.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;As a bit of a review, the abstract:&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;&lt;a href="https://shiftconf.co/#schedule" target="_blank"&gt;How To Jump Start a Career in Open Source&lt;/a&gt;&lt;/h3&gt;&lt;i&gt;It's not magic. It's not luck. It's not going to happen by itself, so what's the secret sauce? Understanding what makes a career in open source grow, what choices are crucial, and what actions accelerate or damage your open source future are sometimes hard to grasp. Learning to position, expand and grow your personal brand in the open source world is what this session provides. Be ready for your next step in open source. Join me for an hour of power where you'll be given a clear and easy to use plan for jump starting your open source career immediately.&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;The video:&lt;br /&gt;&lt;br /&gt;&lt;div align="center"&gt;&lt;iframe allow="autoplay; encrypted-media" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/-_ZgfmnL9bM" width="560"&gt;&lt;/iframe&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;Hope you enjoyed the talk, see you again next time!&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=9eShmwYxRq0:rkIEP8cEb8o:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=9eShmwYxRq0:rkIEP8cEb8o:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=9eShmwYxRq0:rkIEP8cEb8o:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=9eShmwYxRq0:rkIEP8cEb8o:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=9eShmwYxRq0:rkIEP8cEb8o:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=9eShmwYxRq0:rkIEP8cEb8o:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=9eShmwYxRq0:rkIEP8cEb8o:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=9eShmwYxRq0:rkIEP8cEb8o:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=9eShmwYxRq0:rkIEP8cEb8o:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=9eShmwYxRq0:rkIEP8cEb8o:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=9eShmwYxRq0:rkIEP8cEb8o:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/9eShmwYxRq0" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/H2zCLGE-I1M" height="1" width="1" alt=""/&gt;</content><summary>As previously posted, I spent this week at the largest developer conference in Southeast Europe, known as the Shift Developer Conference 2018. I gave a talk on the soft skill side of development, suggesting some ways to jump start a career in open source. I did not mention coding, pull requests or even suggest to join a coding project. It's more subtle than the obvious components one would expect ...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2018-08-09T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/9eShmwYxRq0/shift-dev-2018-howto-jump-start-career-in-opensource-video.html</feedburner:origLink></entry><entry><title>Hibernate Community Newsletter 15/2018</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/D6Qi6So2-nQ/" /><category term="Discussions" scheme="searchisko:content:tags" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="Hibernate ORM" scheme="searchisko:content:tags" /><category term="newsletter" scheme="searchisko:content:tags" /><author><name>Vlad Mihalcea</name></author><id>searchisko:content:id:jbossorg_blog-hibernate_community_newsletter_15_2018</id><updated>2018-08-10T14:22:18Z</updated><published>2018-08-09T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Welcome to the Hibernate community newsletter in which we share blog posts, forum, and StackOverflow questions that are especially relevant to our users.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="interviews"&gt;&lt;a class="anchor" href="#interviews"&gt;&lt;/a&gt;Interviews&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Don’t miss our Hibernate developer interview with &lt;a href="http://in.relation.to/2018/08/07/meet-jan-willem-gmelig-meyling/"&gt;Jan-Willem Gmelig Meyling&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you want to share your story about Hibernate, let us know, and we can share it with our huge community of passionate developers.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="articles"&gt;&lt;a class="anchor" href="#articles"&gt;&lt;/a&gt;Articles&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Ikhiloya Imokhai explains &lt;a href="https://medium.com/skillhive/how-to-retrieve-a-parent-field-from-a-child-entity-in-a-one-to-many-bidirectional-jpa-relationship-4b3cd707bfb7"&gt;how to implement a REST service to fetch entities that form a bidirectional JPA relationship when using Spring Boot&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Since cloud computing becomes more and more popular, the need for database multitenancy becomes even more obvious. &lt;a href="https://vladmihalcea.com/database-multitenancy/"&gt;This article&lt;/a&gt; is a short introduction to database multitenancy, and explains how you can achieve it at catalog, schema or table level.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Hibernate Validator is the reference implementation of the Bean Validation specification, and it allows you to decouple the domain model validation logic from the business one. For more details, check out &lt;a href="https://howtodoinjava.com/hibernate/hibernate-validator-java-bean-validation/"&gt;this introductory tutorial&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For our Czech readers, &lt;a href="https://www.zdrojak.cz/clanky/java-na-webovem-serveru-prace-s-databazi-ii/"&gt;this tutorial&lt;/a&gt; shows you how to write data access code using both the Hibernate and the Spring JdbcTemplate.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In &lt;a href="http://www.kodnito.com/posts/microprofile-rest-api-with-mongodb-hibernate-ogm-and-thorntail/"&gt;this article&lt;/a&gt;, Hayri Cicek explains how to develop a MicroProfile REST API with MongoDB, Hibernate OGM and Thorntail (previously known as WildFly Swarm).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;When using JPA inheritance, you might want to restrict a given polymorphic query to fetch only a subset of subclasses. &lt;a href="https://vladmihalcea.com/query-entity-type-jpa-criteria-api/"&gt;This article&lt;/a&gt; explains how you can achieve this goal when using the JPA Criteria API.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you want to retrieve the underlying database connection when using Hibernate, &lt;a href="https://www.thoughts-on-java.org/hibernate-tips-get-the-sql-connection-used-by-your-hibernate-session/"&gt;this article&lt;/a&gt; explains how to do so.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="time-to-upgrade"&gt;&lt;a class="anchor" href="#time-to-upgrade"&gt;&lt;/a&gt;Time to upgrade&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;There were several Hibernate project releases since the last newsletter:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://in.relation.to/2018/07/24/hibernate-orm-533-final-out/"&gt;Hibernate ORM 5.3.3&lt;/a&gt; and &lt;a href="http://in.relation.to/2018/08/02/hibernate-orm-534-final-out/"&gt;Hibernate ORM 5.3.4&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://in.relation.to/2018/07/25/hibernate-search-5-10-3-Final/"&gt;Hibernate Search 5.10.3&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="questions-and-answers"&gt;&lt;a class="anchor" href="#questions-and-answers"&gt;&lt;/a&gt;Questions and answers&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/get-detatchedcriteria-for-specific-class/1151/2"&gt;Filter entities by a specific subclass type using Criteria&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/how-to-fetch-one-side-of-a-many-to-many-association-while-on-the-other-side-all-records-match-a-given-filtering-criteria/1095"&gt;How to fetch one side of a many-to-many association while on the other side all records match a given filtering criteria&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/31725820/hql-returning-timestamp-for-given-timezone/31741171#31741171"&gt;How to use the MySQL CONVERT_TZ function in a JPQL or HQL query&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/limit-clause-is-not-working-in-jpa-named-queries/1112"&gt;LIMIT clause is not working in JPA Named Queries &lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/how-i-can-create-select-from-select-query/1156"&gt;How can I create SELECT FROM SELECT query with JPA and Hibernate? &lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/how-to-fetch-a-transient-property-from-the-database-using-jpa-and-hibernate/1160"&gt;How to fetch a @Transient property from the database using JPA and Hibernate?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/how-to-get-the-default-transaction-isolation-level-using-hibernate-api/1165"&gt;How to get the default transaction isolation level using Hibernate API&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/criteriaimpl-and-stream/1144"&gt;How to call stream() on the Hibernate CriteriaImpl object&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/sqlquery-and-org-hibernate-query-are-deprecated-what-to-use-instead/1179"&gt;SQLQuery and org.hibernate.Query are deprecated. What to use instead?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/25893476/can-you-have-multiple-transactions-within-one-hibernate-session/26026394#26026394"&gt;Can you have multiple transactions within one Hibernate Session?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/34371128/jpa-2-0how-to-fetch-whole-of-entity-graph/34374600#34374600"&gt;How to fetch a whole entity graph using JPA&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/11938253/whats-the-difference-between-joincolumn-and-mappedby-when-using-a-jpa-onetoma/51055434#51055434"&gt;What’s the difference between &lt;code&gt;@JoinColumn&lt;/code&gt; and &lt;code&gt;mappedBy&lt;/code&gt; when using a JPA &lt;code&gt;@OneToMany&lt;/code&gt; association&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/23708905/application-cache-v-s-hibernate-second-level-cache-which-to-use/23710646#23710646"&gt;Application cache v.s. Hibernate second-level cache, which one to use?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/25047226/jpa-generationtype-auto-not-considering-column-with-auto-increment/25052275#25052275"&gt;JPA GenerationType.AUTO not considering column with auto increment&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/25746509/hibernate-nativequery-transaction/25830441#25830441"&gt;How to run native SQL queries in the same Hibernate transaction?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/D6Qi6So2-nQ" height="1" width="1" alt=""/&gt;</content><summary>Welcome to the Hibernate community newsletter in which we share blog posts, forum, and StackOverflow questions that are especially relevant to our users. Interviews Don’t miss our Hibernate developer interview with Jan-Willem Gmelig Meyling. If you want to share your story about Hibernate, let us know, and we can share it with our huge community of passionate developers. Articles Ikhiloya Imokhai ...</summary><dc:creator>Vlad Mihalcea</dc:creator><dc:date>2018-08-09T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2018/08/09/hibernate-community-newsletter-2018-15/</feedburner:origLink></entry><entry><title>Autoscaling the Red Hat Cache Service on OpenShift</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/bPnPKARoyOI/" /><category term="Cloud" /><category term="Red Hat JBoss Data Grid" /><category term="Red Hat OpenShift Container Platform" /><category term="Horizontal Pod Autoscaler" /><category term="Red Hat Cache Service" /><category term="Red Hat Data Grid" /><category term="Red Hat OpenShift" /><category term="Red hat OpenShift Online" /><category term="service-catalog" /><author><name>Sebastian Łaskawiec</name></author><id>https://developers.redhat.com/blog/?p=512597</id><updated>2018-08-08T14:33:31Z</updated><published>2018-08-08T14:33:31Z</published><content type="html">&lt;p&gt;Earlier this year, Red Hat announced the Red Hat Cache Service which is a distributed in-memory caching service that runs on &lt;a href="https://www.openshift.com/"&gt;Red Hat OpenShift&lt;/a&gt;.  &lt;a href="https://developers.redhat.com/products/datagrid/overview/"&gt;Red Hat Data Grid&lt;/a&gt; is used as the core of the cache service. The cache service is one of the things you can easily install on OpenShift through the &lt;a href="https://blog.openshift.com/whats-new-in-openshift-3-7-service-catalog-and-brokers/"&gt;OpenShift Service Catalog&lt;/a&gt;. You can find the cache service in the &lt;a href="https://www.openshift.com/products/online/"&gt;Red Hat OpenShift Online&lt;/a&gt; Pro tier.  (Alternatively, you can install the Cache Service on your own &lt;a href="https://developers.redhat.com/products/openshift/overview/"&gt;Red Hat OpenShift Container Platform&lt;/a&gt; installation by following the &lt;a href="https://github.com/jboss-container-images/datagrid-7-image/blob/datagrid-services-dev/documentation/cache-service.asciidoc#installing-red-hat-cache-service-into-service-catalog"&gt;installation manual&lt;/a&gt;.)&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-512607 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/08/image1-1024x401.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/08/image1-1024x401.png" alt="" width="640" height="251" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/08/image1-1024x401.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/image1-300x117.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/image1-768x301.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/image1.png 1433w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/p&gt; &lt;p&gt;The Cache Service automatically calculates the amount of user storage based on the container size it’s scheduled on. Typically, it’s 512MB. What’s more interesting is that the Cache Service can operate near the full memory capacity (~97–98 %).&lt;/p&gt; &lt;p&gt;The automatic memory adjustment gives you a nice opportunity to try out the new &lt;a href="https://docs.openshift.com/container-platform/3.9/dev_guide/pod_autoscaling.html"&gt;Horizontal Pod Autoscaler&lt;/a&gt; (which now supports memory and custom metrics-based autoscaling). The autoscaler monitors the amount of memory used by the container and adds or removes Cache Service pods based on this measurement.&lt;span id="more-512597"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;The demo&lt;/h2&gt; &lt;p&gt;First, instantiate a new Cache Service from the Service Catalog. Then wait a few moments until it becomes ready.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-512627 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/08/image2-1024x429.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/08/image2-1024x429.png" alt="" width="640" height="268" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/08/image2-1024x429.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/image2-300x126.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/image2-768x321.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/image2.png 1412w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/p&gt; &lt;p&gt;The next step is to create a Horizontal Pod Autoscaler based on the following definition:&lt;/p&gt; &lt;p&gt;View the code on &lt;a href="https://gist.github.com/slaskawi/3d0b4aed6c352c4ac2f9827d3c4fd237"&gt;Gist&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Once a pod hits 92% of container memory, OpenShift will spin up another one.&lt;/p&gt; &lt;p&gt;Next, Red Hat Data Grid will form a cluster of two (or three) nodes, which will increase the overall system’s capacity. The interesting thing to note is that the memory will not drop on pod number 0. It will remain at the same level. This is because the Cache Service uses a number of owners equal to 1 and the State Transfer minimizes data shuffling in the cluster.&lt;/p&gt; &lt;p&gt;Next, load some data into the Data Grid. One way to do this is to create a Red Hat Enterprise Linux (RHEL) pod inside the same project and make REST calls with the data:&lt;/p&gt; &lt;p&gt;View the code on &lt;a href="https://gist.github.com/slaskawi/43667383c67f6c8d60bed2eb05ab0cfd"&gt;Gist&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The above command spins up a new RHEL pod and attaches TTY to it. This way, we will be able to invoke curl commands from inside of our project:&lt;/p&gt; &lt;p&gt;View the code on &lt;a href="https://gist.github.com/slaskawi/ccaafac852a228d6ec54d0f9ff421031"&gt;Gist&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The above command inserts 1,000 entries into the default cache. Each of the entries is roughly 10KB. Depending on the container size, we might increase the number of iterations in the loop or tweak the command to insert data into different key prefixes.&lt;/p&gt; &lt;p&gt;Once the container hits the scaling limit, Horizontal Pod Autoscaler will create another pod.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-512637 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/08/image3-1024x436.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/08/image3-1024x436.png" alt="" width="640" height="273" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/08/image3-1024x436.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/image3-300x128.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/image3-768x327.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/08/image3.png 1417w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;Autoscaling Red Hat Cache Service is a really nice way of increasing overall system capacity depending on the load. Since the Cache Service is based on eviction (removing the least frequently used keys when it hits the memory limit) and off-heap. It was designed to reach 97–98% of the capacity when constantly adding data. Since new data “pushes out” old entries, the container will only scale up and never scale down.&lt;/p&gt; &lt;p&gt;Try autoscaling Red Hat Cache Service to improve your system&amp;#8217;s overall capacity.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F08%2Fautoscaling-red-hat-cache-service%2F&amp;#38;linkname=Autoscaling%20the%20Red%20Hat%20Cache%20Service%20on%20OpenShift" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F08%2Fautoscaling-red-hat-cache-service%2F&amp;#38;linkname=Autoscaling%20the%20Red%20Hat%20Cache%20Service%20on%20OpenShift" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F08%2Fautoscaling-red-hat-cache-service%2F&amp;#38;linkname=Autoscaling%20the%20Red%20Hat%20Cache%20Service%20on%20OpenShift" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F08%2Fautoscaling-red-hat-cache-service%2F&amp;#38;linkname=Autoscaling%20the%20Red%20Hat%20Cache%20Service%20on%20OpenShift" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F08%2Fautoscaling-red-hat-cache-service%2F&amp;#38;linkname=Autoscaling%20the%20Red%20Hat%20Cache%20Service%20on%20OpenShift" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F08%2Fautoscaling-red-hat-cache-service%2F&amp;#38;linkname=Autoscaling%20the%20Red%20Hat%20Cache%20Service%20on%20OpenShift" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F08%2Fautoscaling-red-hat-cache-service%2F&amp;#38;linkname=Autoscaling%20the%20Red%20Hat%20Cache%20Service%20on%20OpenShift" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F08%2Fautoscaling-red-hat-cache-service%2F&amp;#38;linkname=Autoscaling%20the%20Red%20Hat%20Cache%20Service%20on%20OpenShift" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F08%2Fautoscaling-red-hat-cache-service%2F&amp;#38;title=Autoscaling%20the%20Red%20Hat%20Cache%20Service%20on%20OpenShift" data-a2a-url="https://developers.redhat.com/blog/2018/08/08/autoscaling-red-hat-cache-service/" data-a2a-title="Autoscaling the Red Hat Cache Service on OpenShift"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/08/08/autoscaling-red-hat-cache-service/"&gt;Autoscaling the Red Hat Cache Service on OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/bPnPKARoyOI" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Earlier this year, Red Hat announced the Red Hat Cache Service which is a distributed in-memory caching service that runs on Red Hat OpenShift.  Red Hat Data Grid is used as the core of the cache service. The cache service is one of the things you can easily install on OpenShift through the OpenShift Service Catalog. You [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/08/08/autoscaling-red-hat-cache-service/"&gt;Autoscaling the Red Hat Cache Service on OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/08/08/autoscaling-red-hat-cache-service/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">512597</post-id><dc:creator>Sebastian Łaskawiec</dc:creator><dc:date>2018-08-08T14:33:31Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/08/08/autoscaling-red-hat-cache-service/</feedburner:origLink></entry><entry><title>Meet Jan-Willem Gmelig Meyling</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/uq-A8UiRQ28/" /><category term="Discussions" scheme="searchisko:content:tags" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="Hibernate ORM" scheme="searchisko:content:tags" /><category term="interview" scheme="searchisko:content:tags" /><author><name>Vlad Mihalcea</name></author><id>searchisko:content:id:jbossorg_blog-meet_jan_willem_gmelig_meyling</id><updated>2018-08-10T14:22:18Z</updated><published>2018-08-07T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In this post, I’d like you to meet &lt;a href="https://twitter.com/janwillemyme"&gt;Jan-Willem Gmelig Meyling&lt;/a&gt;, software developer, and open source enthusiast.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="http://in.relation.to/images/JanWillemGmeligMeyling.jpg" alt="Jan-Willem Gmelig Meyling, align=" width="400" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="hi-jan-willem-would-you-like-to-introduce-yourself"&gt;&lt;a class="anchor" href="#hi-jan-willem-would-you-like-to-introduce-yourself"&gt;&lt;/a&gt;Hi, Jan-Willem. Would you like to introduce yourself?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Hi Vlad! My name is Jan-Willem Gmelig Meyling. I am a software developer working at &lt;a href="http://athenastudies.co.uk"&gt;AthenaStudies&lt;/a&gt; in Amsterdam, the Netherlands. I got in touch with the JBoss stack when I started developing DevHub, a continuous integration/code repository platform developed at the Delft University of Technology developed to give students a simple practical introduction into modern software development. The well-structured API and thorough documentation with plenty examples for both Java EE and Hibernate got me hooked onto the technology immediately. As a result, I have been building Java EE applications on top of WildFly/Hibernate for about four years now.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;About two years ago I first introduced Hibernate at my company and we started migrating from our custom active record code to Hibernate ORM. In the process, I found the need for reprojection within queries (i.e. selecting from another select statement). I also needed to implement some recursive queries, something I much rather did within my JPA domain than with plain SQL with a custom result set mapping. After a long search, I found the &lt;a href="https://github.com/Blazebit/blaze-persistence"&gt;Blaze-Persistence&lt;/a&gt; library, which provides a custom CriteriaBuilder that allowed me to build Common Table Expressions (CTEs) for my queries in Hibernate. The CTE’s allowed me to create temporary parameterized and even recursive "tables" for queries. Certainly, at the time, Blaze-Persist was under heavy development, so I stumbled upon some issues which then lead to contributing to Blaze-Persist. Besides CTE’s Blaze-Persist is packed with features allowing you to write VALUES clauses, create fast entity projections using EntityViews, and provide pagination for queries out of the box. While we’re constantly working on Blaze-persist, we sometimes stumble upon an issue or feature we need in Hibernate, and as such I’ve recently started contributing to Hibernate as well. But hey, what software is perfect, right?&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="you-ve-been-contributing-significantly-to-the-hibernate-orm-project-lately-what-drives-you-to-make-these-improvements-to-the-hibernate-orm-project"&gt;&lt;a class="anchor" href="#you-ve-been-contributing-significantly-to-the-hibernate-orm-project-lately-what-drives-you-to-make-these-improvements-to-the-hibernate-orm-project"&gt;&lt;/a&gt;You’ve been contributing significantly to the Hibernate ORM project lately. What drives you to make these improvements to the Hibernate ORM project?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Using Hibernate so extensively, sometimes I just stumble upon something for which StackOverflow simply won’t have the answer. Taking more active role in the Hibernate community allows me to keep track of new features, requests, changed code that may affect my use, and overall make an easier evaluation whether something that’s not working for me should work, and whether I should try and find a workaround or perhaps implement this as a new feature. Furthermore, using so much open source software, I feel it only makes sense to at least give a try at new features or minor issues that you could resolve.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Another driver for me is that I just try to shy away from workarounds. Of course, I can just change my mapping here and use a native SQL query there, but would I work around the issue now, then my colleagues won’t be able to recognize what that code is for, probably invalidly refactor it at some point, or encounter the exact same issue themselves elsewhere. I much rather resolve the issue at the root, so that both my software is more maintainable and my dependencies become more stable and feature-rich. Also, what’s the fun of a workaround if you can spend a couple of hours spitting through the Hibernate code? ;-)&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="is-it-difficult-to-start-contributing-to-hibernate-how-did-you-find-the-process-github-gradle-reviewing"&gt;&lt;a class="anchor" href="#is-it-difficult-to-start-contributing-to-hibernate-how-did-you-find-the-process-github-gradle-reviewing"&gt;&lt;/a&gt;Is it difficult to start contributing to Hibernate? How did you find the process (GitHub, Gradle, reviewing)?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Hibernate being such a sophisticated and large code base can be fairly overwhelming. It certainly was to me at first! In my experience, there will always be issues that require quite some prior knowledge to resolve and thus are not particularly suitable for starters. For some features, I have been stepping through the code for days in a row before I got a feeling for what was going on in that particular segment. Nevertheless, I do think that this should never discourage to at least have a try at an issue. Some issues are actually fairly easy to resolve. The codebase is very readable and properly documented which also helps to find a place to start.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The process is very well described in the &lt;a href="https://github.com/hibernate/hibernate-orm/blob/master/README.md"&gt;README&lt;/a&gt; available in the repository and the project website. For me personally, everything was easily set up. Admittedly, enthusiastic as I was, I only read them after I had already forked and set up the project, but that’s really my mistake. The review process for external contributors is quite extensive and I think rightfully so. The codebase is just complex and some features will inherently require some discussion or at least thorough verification of the implementation. I actually think it would be a good idea to consistently require reviews on internal contributions as well.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;One problem that I think is common for everyone contributing to Hibernate is the dilemma between Hibernate 5.x and 6.0. Some new features just aren’t sensible to build in 5.x because some aspects are severely reworked in 6.0. Other features are simply dependent on the structural changes in 6.0. On the other hand, contributing to 5.x will give you a much quicker release cycle to actually start using your newly added feature. Furthermore, it seems just difficult to get a foot in the door with 6.0, the current state of development is not very transparent, nor it is very clear how and where to contribute. So, in conclusion, I think contributing to 5.x is fairly easy, but contributing to 6.0 seems rather difficult.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="tell-us-what-s-been-your-experience-using-hibernate-in-the-enterprise-projects-you-ve-been-working-on"&gt;&lt;a class="anchor" href="#tell-us-what-s-been-your-experience-using-hibernate-in-the-enterprise-projects-you-ve-been-working-on"&gt;&lt;/a&gt;Tell us what’s been your experience using Hibernate in the enterprise projects you’ve been working on?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Over the years, I’ve noticed that JPA, with its Persistence Contexts, managed entities, and handling of transactions, is all but intuitive. And the catchy thing is that it appears to be very intuitive because you already know your RDBMS, BCNF, Java types, annotations, and the documentation of both Hibernate and JPA is very good.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;So you think you know what you’re doing, but you really don’t. Honestly, before you start doing anything with Hibernate (or JPA for that fact), I strongly recommend reading at least one Hibernate primer from cover to cover. Personally, I’ve read &lt;a href="https://www.manning.com/books/java-persistence-with-hibernate"&gt;Java Persistence with Hibernate (C. Bauer, 2006)&lt;/a&gt;, and it just taught me so much about the design and intended behavior of JPA and Hibernate and explained a lot of "quirks" I experienced in the beginning.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;So every new team member that I get on board now first has to go through at least one JPA primer. It just saves me a lot of time cleaning up wrongly produced Hibernate code or unexpected bugs because didn’t understand when an entity was still tracked and will be flushed at some point.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="we-always-value-feedback-from-our-community-so-can-you-tell-us-what-features-you-d-like-us-to-add-to-make-easier-for-other-data-access-frameworks-to-integrate-with-jpa-or-hibernate"&gt;&lt;a class="anchor" href="#we-always-value-feedback-from-our-community-so-can-you-tell-us-what-features-you-d-like-us-to-add-to-make-easier-for-other-data-access-frameworks-to-integrate-with-jpa-or-hibernate"&gt;&lt;/a&gt;We always value feedback from our community,  so can you tell us what features you’d like us to add to make easier for other data access frameworks to integrate with JPA or Hibernate?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;With the pull requests that I have submitted, I have found out that some (mostly optional) JPA features and Hibernate extensions are not always working as expected when used together. This compatibility is not documented to my knowledge. I’d like to see some sort of feature matrix. I also think we should extend bug reports with a "spec mandatory", "spec optional", "hibernate extension" flag and base prioritization on that. Currently, the reporter just sets any priority and it’s really difficult to find actual "important" issues in the issue tracker. I also think its a good idea to have this reflected in the test suite.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Furthermore, I think the test suite should be extended to more sophistically check the produced SQL (number of queries, number of joins) and eagerly fetched attributes (unexpected failure from lazy loading). Some recent pull requests and bug reports have shown that it’s relatively easy to "break" lazy loading or join fetching in some cases and this raises the question whether we should put more effort to protect ourselves against the ever so unfortunate performance issues.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Thanks for having me!&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;strong&gt;Thank you, Jan-Willem, for taking your time. It is a great honor to have you here. To reach Jan-Willem, you can follow him on &lt;a href="https://twitter.com/janwillemyme"&gt;Twitter&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/uq-A8UiRQ28" height="1" width="1" alt=""/&gt;</content><summary>In this post, I’d like you to meet Jan-Willem Gmelig Meyling, software developer, and open source enthusiast. Hi, Jan-Willem. Would you like to introduce yourself? Hi Vlad! My name is Jan-Willem Gmelig Meyling. I am a software developer working at AthenaStudies in Amsterdam, the Netherlands. I got in touch with the JBoss stack when I started developing DevHub, a continuous integration/code reposit...</summary><dc:creator>Vlad Mihalcea</dc:creator><dc:date>2018-08-07T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2018/08/07/meet-jan-willem-gmelig-meyling/</feedburner:origLink></entry><entry><title>Setting up RBAC on Red Hat AMQ Broker</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/g6C8S57LEwI/" /><category term="Integration" /><category term="JBoss A-MQ" /><category term="amq" /><category term="artemis" /><category term="messaging" /><category term="RBAC" /><category term="Red Hat AMQ" /><category term="Role-based access control" /><category term="roles" /><category term="Security" /><category term="separation of duties" /><author><name>Yohanes Widi Sono</name></author><id>https://developers.redhat.com/blog/?p=511457</id><updated>2018-08-06T13:30:14Z</updated><published>2018-08-06T13:30:14Z</published><content type="html">&lt;p&gt;One thing that is common in the enterprise world, especially in highly regulated industries, is to have separation of duties. Role-based access controls (RBAC) have built-in support for separation of duties. Roles determine what operations a user can and cannot perform. This post provides an example of how to configure proper RBAC on top of &lt;a href="https://developers.redhat.com/products/amq/overview/"&gt;Red Hat AMQ&lt;/a&gt;, a flexible, high-performance messaging platform based on the open source Apache ActiveMQ Artemis project.&lt;/p&gt; &lt;p&gt;In most of the cases, separation of duties on Red Hat AMQ can be divided into three primary roles:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Administrator role, which will have all permissions&lt;/li&gt; &lt;li&gt;Application role, which will have permission to publish, consume, or produce messages to a specific address, subscribe to topics or queues, or create and delete addresses.&lt;/li&gt; &lt;li&gt;Operation role, which will have read-only permission via the web console or supported protocols&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;To implement those roles, Red Hat AMQ has several security features that need be configured, as described in the following sections.&lt;/p&gt; &lt;p&gt;&lt;span id="more-511457"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;AMQ Broker authentication&lt;/h2&gt; &lt;p&gt;Out of the box, AMQ ships with the Java Authentication and Authorization Service (JAAS) security manager. It provides a default &lt;code&gt;PropertiesLogin&lt;/code&gt; JAAS login module that reads user, password, and roles information from properties files (&lt;code&gt;artemis-users.properties&lt;/code&gt; and &lt;code&gt;artemis-roles.properties&lt;/code&gt;).&lt;/p&gt; &lt;p&gt;Thus, to add a user and role, we can use this &lt;code&gt;artemis&lt;/code&gt; command:&lt;/p&gt; &lt;p&gt;&lt;code&gt;// artemis user add --user &amp;#60;username&amp;#62; --password &amp;#60;password&amp;#62; --role &amp;#60;role_comma_seperated&amp;#62;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;For example, to add three users and their roles—one user with the Administrator role, one user with the Application role, and one user with the Operation role—we can use an &lt;code&gt;artemis&lt;/code&gt; command such as this:&lt;/p&gt; &lt;pre&gt;$ artemis user add --user amqadmin --password amqadmin --role amqadmin $ artemis user add --user amqapps --password amqapps --role amqapps $ artemis user add --user amqops --password amqops --role amqops&lt;/pre&gt; &lt;p&gt;On top of that, Red Hat AMQ also provides other authentication plugins. For more information, see the &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_amq/7.2/html/using_amq_broker/" rel="nofollow"&gt;official documentation&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;AMQ Broker authorization&lt;/h2&gt; &lt;p&gt;AMQ Broker authorization policies provide a flexible, role-based security model for applying security to queues based on their respective addresses. For instance, operations such as publishing, consuming, and producing a message to an address as well as creating and deleting an address are supported out of the box. In addition, the policies support protocols such as AMQP, OpenWire, MQTT, STOMP, HornetQ, and the native Artemis Core protocol. To clarify, authorization policies are not meant for setting the permission of the web console.&lt;/p&gt; &lt;p&gt;To configure permissions, we can edit the &lt;code&gt;broker.xml&lt;/code&gt; file in the &lt;code&gt;etc&lt;/code&gt; folder. By default, it has eight different permissions per address pattern. Thus, to implement the above roles, we can use permissions like this:&lt;/p&gt; &lt;pre&gt;&amp;#60;security-settings&amp;#62; &amp;#60;security-setting match="#"&amp;#62; &amp;#60;permission type="createNonDurableQueue" roles="amqadmin,amqapps"/&amp;#62; &amp;#60;permission type="deleteNonDurableQueue" roles="amqadmin,amqapps"/&amp;#62; &amp;#60;permission type="createDurableQueue" roles="amqadmin,amqapps"/&amp;#62; &amp;#60;permission type="deleteDurableQueue" roles="amqadmin,amqapps"/&amp;#62; &amp;#60;permission type="createAddress" roles="amqadmin,amqapps"/&amp;#62; &amp;#60;permission type="deleteAddress" roles="amqadmin,amqapps"/&amp;#62; &amp;#60;permission type="consume" roles="amqadmin,amqapps"/&amp;#62; &amp;#60;permission type="browse" roles="amqadmin,amqapps,amqops"/&amp;#62; &amp;#60;permission type="send" roles="amqadmin,amqapps"/&amp;#62; &amp;#60;!-- we need this; otherwise ./artemis data imp wouldn't work --&amp;#62; &amp;#60;permission type="manage" roles="amqadmin,amqapps"/&amp;#62; &amp;#60;/security-setting&amp;#62; &amp;#60;/security-settings&amp;#62; &lt;/pre&gt; &lt;p&gt;Based on the example above, only users belonging to roles &lt;code&gt;amqadmin&lt;/code&gt;and &lt;code&gt;amqapps&lt;/code&gt; have permission to do operations (send/consume/browse/manage messages) to an AMQ address (queue/topic) as well as create and delete queues. In contrast, users belonging to the &lt;code&gt;amqops&lt;/code&gt; role have permission only to browse an address for monitoring purposes.&lt;/p&gt; &lt;h2&gt;AMQ web console authorization&lt;/h2&gt; &lt;p&gt;The web console in RedHat AMQ is based on &lt;a href="http://hawt.io/" rel="nofollow"&gt;Hawtio&lt;/a&gt;, which reads JMX operations using &lt;a href="https://jolokia.org/" rel="nofollow"&gt;Jolokia&lt;/a&gt;. Therefore, to configure the permissions for the web console, we need to set the JMX permission. Specifically, it can be set through the &lt;code&gt;management.xml&lt;/code&gt; file in the same folder as the &lt;code&gt;broker.xml&lt;/code&gt; file (the &lt;code&gt;etc&lt;/code&gt; folder). In short, to implement the primary roles described above, we can implement something like the following:&lt;/p&gt; &lt;pre&gt;&amp;#60;role-access&amp;#62; &amp;#60;match domain="org.apache.activemq.artemis" &amp;#62; &amp;#60;access method="list*" roles="amqops,amqadmin"/&amp;#62; &amp;#60;access method="get*" roles="amqops,amqadmin"/&amp;#62; &amp;#60;access method="is*" roles="amqops,amqadmin"/&amp;#62; &amp;#60;access method="set*" roles="amqadmin"/&amp;#62; &amp;#60;access method="browse*" roles="amqops,amqadmin"/&amp;#62; &amp;#60;access method="create*" roles="amqadmin"/&amp;#62; &amp;#60;access method="delete*" roles="amqadmin"/&amp;#62; &amp;#60;access method="send*" roles="amqadmin"/&amp;#62; &amp;#60;access method="*" roles="amqadmin"/&amp;#62; &amp;#60;/match&amp;#62; &amp;#60;/role-access&amp;#62; &lt;/pre&gt; &lt;p&gt;To sum up, only users belonging to &lt;code&gt;amqadmin&lt;/code&gt; have full permissions. However, &lt;code&gt;amqops&lt;/code&gt; users have read-only permission to monitor the broker using the web console. Similarly, the &lt;code&gt;amqapps&lt;/code&gt; role has no permission to use any JMX operation nor to log in through the web console.&lt;/p&gt; &lt;p&gt;Furthermore, the example above shows us that the method setting for a permission is actually a pattern for a JMX operation. It is important to realize that a role that is allowed to log in to the web console is read from the Java system property &lt;code&gt;hawtio.role&lt;/code&gt;. Hence, we need to configure the &lt;code&gt;etc/artemis.profile&lt;/code&gt; file as shown in the example below:&lt;/p&gt; &lt;pre&gt;JAVA_ARGS=" -XX:+PrintClassHistogram -XX:+UseG1GC -XX:+AggressiveOpts -XX:+UseFastAccessorMethods -Xms512M -Xmx2G -Dhawtio.realm=activemq -Dhawtio.offline="true" -Dhawtio.role="amqadmin,amqops" -Dhawtio.rolePrincipalClasses=org.apache.activemq.artemis.spi.core.security.jaas.RolePrincipal -Djolokia.policyLocation=${ARTEMIS_INSTANCE_ETC_URI}jolokia-access.xml -Djon.id=amq" &lt;/pre&gt; &lt;p&gt;In the example configuration above, the only thing that needed to be changed is &lt;code&gt;-Dhawtio.role="amqadmin,amqops"&lt;/code&gt;, which specifies the roles (comma-delimited) that are allowed to log in.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;By configuring the features described above, you can implement proper RBAC on top of Red Hat AMQ to improve security and enforce separation of duties. It is especially important to do this if you are in a highly regulated industry.&lt;/p&gt; &lt;p&gt;For more information on users and roles in Red Hat AMQ Broker, see the &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_amq/7.1/html/using_amq_broker/users"&gt;Users and Roles&lt;/a&gt; chapter of the &lt;em&gt;Using AMQ Broker&lt;/em&gt; guide.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F06%2Fsetting-up-rbac-on-red-hat-amq-broker%2F&amp;#38;linkname=Setting%20up%20RBAC%20on%20Red%20Hat%20AMQ%20Broker" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F06%2Fsetting-up-rbac-on-red-hat-amq-broker%2F&amp;#38;linkname=Setting%20up%20RBAC%20on%20Red%20Hat%20AMQ%20Broker" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F06%2Fsetting-up-rbac-on-red-hat-amq-broker%2F&amp;#38;linkname=Setting%20up%20RBAC%20on%20Red%20Hat%20AMQ%20Broker" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F06%2Fsetting-up-rbac-on-red-hat-amq-broker%2F&amp;#38;linkname=Setting%20up%20RBAC%20on%20Red%20Hat%20AMQ%20Broker" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F06%2Fsetting-up-rbac-on-red-hat-amq-broker%2F&amp;#38;linkname=Setting%20up%20RBAC%20on%20Red%20Hat%20AMQ%20Broker" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F06%2Fsetting-up-rbac-on-red-hat-amq-broker%2F&amp;#38;linkname=Setting%20up%20RBAC%20on%20Red%20Hat%20AMQ%20Broker" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F06%2Fsetting-up-rbac-on-red-hat-amq-broker%2F&amp;#38;linkname=Setting%20up%20RBAC%20on%20Red%20Hat%20AMQ%20Broker" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F06%2Fsetting-up-rbac-on-red-hat-amq-broker%2F&amp;#38;linkname=Setting%20up%20RBAC%20on%20Red%20Hat%20AMQ%20Broker" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F08%2F06%2Fsetting-up-rbac-on-red-hat-amq-broker%2F&amp;#38;title=Setting%20up%20RBAC%20on%20Red%20Hat%20AMQ%20Broker" data-a2a-url="https://developers.redhat.com/blog/2018/08/06/setting-up-rbac-on-red-hat-amq-broker/" data-a2a-title="Setting up RBAC on Red Hat AMQ Broker"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/08/06/setting-up-rbac-on-red-hat-amq-broker/"&gt;Setting up RBAC on Red Hat AMQ Broker&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/g6C8S57LEwI" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;One thing that is common in the enterprise world, especially in highly regulated industries, is to have separation of duties. Role-based access controls (RBAC) have built-in support for separation of duties. Roles determine what operations a user can and cannot perform. This post provides an example of how to configure proper RBAC on top of [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/08/06/setting-up-rbac-on-red-hat-amq-broker/"&gt;Setting up RBAC on Red Hat AMQ Broker&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/08/06/setting-up-rbac-on-red-hat-amq-broker/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">511457</post-id><dc:creator>Yohanes Widi Sono</dc:creator><dc:date>2018-08-06T13:30:14Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/08/06/setting-up-rbac-on-red-hat-amq-broker/</feedburner:origLink></entry><entry><title>Adventures in GraalVM: invoke Java code from JS in native-image</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/RqCIT9wfmng/Adventures-in-GraalVM-invoke-Java-code-from-JS-in-native-image.html" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_lburgazzoli" scheme="searchisko:content:tags" /><category term="GraalVM" scheme="searchisko:content:tags" /><category term="jboss-fuse" scheme="searchisko:content:tags" /><category term="scripting" scheme="searchisko:content:tags" /><author><name>Luca Burgazzoli</name></author><id>searchisko:content:id:jbossorg_blog-adventures_in_graalvm_invoke_java_code_from_js_in_native_image</id><updated>2018-08-06T00:00:00Z</updated><published>2018-08-06T00:00:00Z</published><content type="html">&lt;div class="paragraph"&gt; &lt;p&gt;Thre&amp;#8217;s a lot of interest about GraalVM&amp;#8217;s native-image recently so I give it a try but instead of "just" trying to compile some java code to a native binary I went to the edge trying to make the native binary extensible via JavaScript.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In a Java application make some java objects available to the JS runtime is trivial and you only need to do something like:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;try(Context context = Context.create()) { MyBean bean = new MyBean(); context.getBindings("js").putMember("bean", bean); context.eval("js", "bean.saySomething()") }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;But when a native binary is generated this does not work anymore as GraalVM as of RC5 does not yet support reflective access to Java code from JS (and other languages) so we need to use some proxy object GraalVM SDK provides.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The javadoc for the proxy packages is:&lt;/p&gt; &lt;/div&gt; &lt;div class="literalblock"&gt; &lt;div class="content"&gt; &lt;pre&gt;http://www.graalvm.org/sdk/javadoc/org/graalvm/polyglot/proxy/package-summary.html&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;So let&amp;#8217;s write an example:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;try(Context ctx = Context.create()) { final Map&amp;#60;String, Object&amp;#62; proxy = new HashMap&amp;#60;&amp;#62;(); &lt;i class="conum" data-value="1"&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt; proxy.put("sayHello", new ProxyExecutable() { &lt;i class="conum" data-value="2"&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt; @Override public Object execute(Value... arguments) { if (arguments.length != 1) { throw new IllegalArgumentException(); } System.out.printf("Hello, %s\n", arguments[0].asString()); return null; } }); ProxyObject bean = ProxyObject.fromMap(proxy); &lt;i class="conum" data-value="3"&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt; ctx.getBindings("js").putMember("bean", bean); &lt;i class="conum" data-value="4"&gt;&lt;/i&gt;&lt;b&gt;(4)&lt;/b&gt; ctx.eval("js", "bean.sayHello('World!')"); &lt;i class="conum" data-value="5"&gt;&lt;/i&gt;&lt;b&gt;(5)&lt;/b&gt; }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="colist arabic"&gt; &lt;table&gt; &lt;tr&gt; &lt;td&gt;&lt;i class="conum" data-value="1"&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt; &lt;td&gt;Use a map to describe our bean&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;i class="conum" data-value="2"&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt; &lt;td&gt;Wrap the function we want to invoke using a &lt;code&gt;&lt;code&gt;ProxyExecutable&lt;/code&gt;&lt;/code&gt; which mimics a guest language objects that are executable&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;i class="conum" data-value="3"&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt; &lt;td&gt;Wrap our map using &lt;code&gt;&lt;code&gt;ProxyObject&lt;/code&gt;&lt;/code&gt; builtin &lt;code&gt;&lt;code&gt;fromMap&lt;/code&gt;&lt;/code&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;i class="conum" data-value="4"&gt;&lt;/i&gt;&lt;b&gt;4&lt;/b&gt;&lt;/td&gt; &lt;td&gt;Bind our proxy to a variable named &lt;code&gt;&lt;code&gt;bean&lt;/code&gt;&lt;/code&gt; the scripting engine can the access&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;i class="conum" data-value="5"&gt;&lt;/i&gt;&lt;b&gt;5&lt;/b&gt;&lt;/td&gt; &lt;td&gt;Finally Invoke our &lt;code&gt;&lt;code&gt;ProxyExecutable&lt;/code&gt;&lt;/code&gt; from JS&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;div class="admonitionblock caution"&gt; &lt;table&gt; &lt;tr&gt; &lt;td class="icon"&gt; &lt;i class="fa icon-caution" title="Caution"&gt;&lt;/i&gt; &lt;/td&gt; &lt;td class="content"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;I&amp;#8217;m unable to have a stable base for going further because of the following issues:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/oracle/graal/issues/594" class="bare"&gt;https://github.com/oracle/graal/issues/594&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/oracle/graal/issues/592" class="bare"&gt;https://github.com/oracle/graal/issues/592&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/RqCIT9wfmng" height="1" width="1" alt=""/&gt;</content><summary>Thre’s a lot of interest about GraalVM’s native-image recently so I give it a try but instead of "just" trying to compile some java code to a native binary I went to the edge trying to make the native binary extensible via JavaScript. In a Java application make some java objects available to the JS runtime is trivial and you only need to do something like: try(Context context = Context.create()) {...</summary><dc:creator>Luca Burgazzoli</dc:creator><dc:date>2018-08-06T00:00:00Z</dc:date><feedburner:origLink>https://lburgazzoli.github.io/2018/08/06/Adventures-in-GraalVM-invoke-Java-code-from-JS-in-native-image.html</feedburner:origLink></entry></feed>
