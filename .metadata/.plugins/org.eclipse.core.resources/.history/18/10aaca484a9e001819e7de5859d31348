import java.util.ArrayList;

import org.json.JSONArray;
import org.json.JSONObject;

public class SortMarvelCharacters {
	
	private JSONArray array;
	private int length;

	public void sort(JSONArray marvelCharacters) {

		if (marvelCharacters == null || marvelCharacters.length() == 0) {
			return;
		}
		
		ArrayList <MarvelCharacter> mcArray = new ArrayList<MarvelCharacter>();
		for (Object result : marvelCharacters) {
			MarvelCharacter mc = new MarvelCharacter();
			JSONObject character = new JSONObject(result.toString());
			mc.setId(character.getInt("id"));
			JSONObject comicList = character.getJSONObject("comics");
			JSONObject storiesList = character.getJSONObject("stories");
			comicsCount = comicsCount + comicList.getInt("available");
			storiesCount = storiesCount + storiesList.getInt("available")
		}
		length = marvelCharacters.length();
	}

	/*private void quickSort(int lowerIndex, int higherIndex) {

		int i = lowerIndex;
		int j = higherIndex;
		// calculate pivot number, I am taking pivot as middle index number
		int pivot = array[lowerIndex+(higherIndex-lowerIndex)/2];
		// Divide into two arrays
		while (i <= j) {
			*//**
			 * In each iteration, we will identify a number from left side which 
			 * is greater then the pivot value, and also we will identify a number 
			 * from right side which is less then the pivot value. Once the search 
			 * is done, then we exchange both numbers.
			 *//*
			while (array[i] < pivot) {
				i++;
			}
			while (array[j] > pivot) {
				j--;
			}
			if (i <= j) {
				exchangeNumbers(i, j);
				//move index to next position on both sides
				i++;
				j--;
			}
		}
		// call quickSort() method recursively
		if (lowerIndex < j)
			quickSort(lowerIndex, j);
		if (i < higherIndex)
			quickSort(i, higherIndex);
	}

	private void exchangeNumbers(int i, int j) {
		int temp = array[i];
		array[i] = array[j];
		array[j] = temp;
	}*/
}
